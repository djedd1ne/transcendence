version: "3.8"

services:
  react:
    build: frontend/.
    container_name: react
    ports:
      - "3000:3000"
    environment:
      - HOST_IP=${HOST_IP}
      - USER_GID=${USER_GID}
    networks:
      transcendence:
        ipv4_address: 152.10.2.1
    volumes:
      - ./debug/frontend:/debug/src
  django:
    build: backend/.
    container_name: django
    ports:
      - "8000:8000"
    networks:
      transcendence:
        ipv4_address: 152.10.2.2
    depends_on: 
      postgresql:
        condition: service_healthy
    volumes:
      - ./debug/backend:/debug
    environment:
      - HOST_IP=${HOST_IP}
      - USER_GID=${USER_GID}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
  postgresql:
    build: db/.
    container_name: postgresql
    networks:
      transcendence:
        ipv4_address: 152.10.2.3
    environment:
      - PGDATA=${PGDATA}
      - LD_LIBRARY_PATH=${LD_LIBRARY_PATH}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: pg_isready -d django_db -U postgres -h 152.10.2.3 -p 5432
      interval: 8s
      timeout: 5s
      retries: 3
      #  game_client:
      #    build: game_client/.
      #    container_name: game_client
      #    ports:
      #      - "8080:8080"
      #    networks:
      #      transcendence:
      #        ipv4_address: 152.10.2.4
      #  game_server:
      #    build: game_server/.
      #    container_name: game_server
      #    ports:
      #      - "3030:3030"
      #    networks:
      #      transcendence:
      #        ipv4_address: 152.10.2.5

networks:
  transcendence:
    driver: bridge
    ipam:
      config:
        - subnet: 152.10.0.0/16
